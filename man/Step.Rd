% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Step.R
\name{Step}
\alias{Step}
\title{Step Class
Represents a step in a survey workflow.}
\description{
The \code{Step} class is used to define and manage individual steps in a survey workflow. Each step can include operations such as recoding variables, computing new variables, or validating dependencies.
}
\details{
The \code{Step} class is part of the survey workflow system and is designed to encapsulate all the information and operations required for a single step in the workflow. Steps can be chained together to form a complete workflow.
}
\examples{
step <- Step$new(
  name = "example_step",
  edition = "2023",
  survey_type = "example_survey",
  type = "compute",
  new_var = "example_var",
  exprs = list(a = 1, b = 2),
  call = NULL,
  svy_before = NULL,
  default_engine = NULL,
  depends_on = list("var1", "var2"),
  comments = "Example step",
  bake = FALSE
)
print(step)
}
\keyword{Steps}
\keyword{Surveymethods}
\keyword{Workflow}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{name}}{The name of the step.}

\item{\code{edition}}{The edition of the survey associated with the step.}

\item{\code{survey_type}}{The type of survey associated with the step.}

\item{\code{type}}{The type of operation performed by the step (e.g., "compute", "recode").}

\item{\code{new_var}}{The name of the new variable created by the step, if applicable.}

\item{\code{exprs}}{A list of expressions defining the step's operations.}

\item{\code{call}}{The function call associated with the step.}

\item{\code{svy_before}}{The survey object before the step is applied.}

\item{\code{default_engine}}{The default engine used for processing the step.}

\item{\code{depends_on}}{A list of variables that the step depends on.}

\item{\code{comments}}{Comments or notes about the step.}

\item{\code{bake}}{A logical value indicating whether the step has been executed.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Step-new}{\code{Step$new()}}
\item \href{#method-Step-clone}{\code{Step$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Step-new"></a>}}
\if{latex}{\out{\hypertarget{method-Step-new}{}}}
\subsection{Method \code{new()}}{
Initializes a new Step object with the provided attributes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Step$new(
  name,
  edition,
  survey_type,
  type,
  new_var,
  exprs,
  call,
  svy_before,
  default_engine,
  depends_on,
  comments,
  bake = !lazy_default()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The name of the step.}

\item{\code{edition}}{The edition of the survey associated with the step.}

\item{\code{survey_type}}{The type of survey associated with the step.}

\item{\code{type}}{The type of operation performed by the step (e.g., "compute", "recode").}

\item{\code{new_var}}{The name of the new variable created by the step, if applicable.}

\item{\code{exprs}}{A list of expressions defining the step's operations.}

\item{\code{call}}{The function call associated with the step.}

\item{\code{svy_before}}{The survey object before the step is applied.}

\item{\code{default_engine}}{The default engine used for processing the step.}

\item{\code{depends_on}}{A list of variables that the step depends on.}

\item{\code{comments}}{Comments or notes about the step.}

\item{\code{bake}}{A logical value indicating whether the step has been executed.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Step-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Step-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Step$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
